Color Palette
css:root {
  /* Primary Colors */
  --indigo-50: #eef2ff;
  --indigo-500: #6366f1;
  --indigo-600: #4f46e5;
  --indigo-700: #4338ca;
  
  /* Neutral Grays */
  --gray-50: #f8fafc;
  --gray-100: #f1f5f9;
  --gray-200: #e2e8f0;
  --gray-300: #cbd5e1;
  --gray-400: #94a3b8;
  --gray-500: #64748b;
  --gray-600: #475569;
  --gray-700: #334155;
  --gray-800: #1e293b;
  --gray-900: #0f172a;
  
  /* Semantic Colors */
  --success: #059669;
  --warning: #d97706;
  --danger: #dc2626;
  
  /* Backgrounds */
  --bg-primary: #ffffff;
  --bg-secondary: #f8fafc;
  --sidebar-bg: #1e293b;
  
  /* Shadows */
  --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1);
  --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1);
  --shadow-xl: 0 20px 25px -5px rgb(0 0 0 / 0.1);
}

css@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap');

body {
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
  font-size: 16px;
  line-height: 1.5;
  color: var(--gray-900);
}

/* Typography Scale */
.text-xs { font-size: 0.75rem; }
.text-sm { font-size: 0.875rem; }
.text-base { font-size: 1rem; }
.text-lg { font-size: 1.125rem; }
.text-xl { font-size: 1.25rem; }
.text-2xl { font-size: 1.5rem; }
.text-3xl { font-size: 1.875rem; }

Main Layout Component
typescriptinterface AppLayout {
  sidebar: SidebarNavigation;
  header: TopHeader;
  mainContent: DynamicContent;
  quickActions: FloatingActionButton;
}

jsx<aside className="w-64 h-screen bg-slate-800 text-white fixed left-0 top-0 z-50 border-r border-slate-700">
  {/* Logo Section */}
  <div className="p-6 border-b border-slate-700">
    <div className="flex items-center gap-3">
      <div className="w-8 h-8 bg-gradient-to-br from-indigo-500 to-purple-600 rounded-lg flex items-center justify-center">
        <svg className="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 20 20">
          <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
        </svg>
      </div>
      <h1 className="text-xl font-bold">LifeOS</h1>
    </div>
  </div>

  {/* Navigation Menu */}
  <nav className="p-4 space-y-1">
    <NavItem icon="dashboard" label="Dashboard" active={true} />
    <NavItem icon="brain" label="Mind Maps" />
    <NavItem icon="tasks" label="Tasks" />
    <NavItem icon="calendar" label="Planner" />
    <NavItem icon="chart" label="Analytics" />
    
    {/* AI Features Section */}
    <div className="pt-6">
      <p className="px-3 text-xs font-semibold text-slate-400 uppercase tracking-wider mb-3">
        AI Features
      </p>
      <NavItem icon="sparkles" label="AI Assistant" />
      <NavItem icon="lightning" label="Smart Scheduling" />
      <NavItem icon="target" label="Goal Tracking" />
    </div>
  </nav>

  {/* User Profile */}
  <div className="absolute bottom-0 left-0 right-0 p-4 border-t border-slate-700">
    <div className="flex items-center gap-3">
      <div className="w-8 h-8 bg-indigo-500 rounded-full flex items-center justify-center">
        <span className="text-sm font-medium text-white">JD</span>
      </div>
      <div>
        <p className="text-sm font-medium text-white">John Doe</p>
        <p className="text-xs text-slate-400">john@example.com</p>
      </div>
    </div>
  </div>
</aside>

jsx<header className="ml-64 bg-white border-b border-gray-200 px-6 py-4 sticky top-0 z-40">
  <div className="flex items-center justify-between">
    <div>
      <h1 className="text-2xl font-bold text-gray-900">Dashboard</h1>
      <p className="text-gray-600">Welcome back, let's get things done</p>
    </div>
    
    <div className="flex items-center gap-4">
      {/* Search */}
      <div className="relative">
        <input 
          type="text" 
          placeholder="Search tasks, notes..."
          className="w-80 px-4 py-2 bg-gray-50 border border-gray-200 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent"
        />
        <SearchIcon className="absolute right-3 top-2.5 w-4 h-4 text-gray-400" />
      </div>
      
      {/* Quick Add Button */}
      <button className="px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 transition-colors font-medium flex items-center gap-2">
        <PlusIcon className="w-4 h-4" />
        Quick Add
      </button>
      
      {/* Date Display */}
      <div className="text-sm text-gray-500 border-l border-gray-200 pl-4">
        {new Date().toLocaleDateString('en-US', { 
          weekday: 'long', 
          year: 'numeric', 
          month: 'long', 
          day: 'numeric' 
        })}
      </div>
      
      {/* Notifications */}
      <button className="relative p-2 text-gray-400 hover:text-gray-600 transition-colors">
        <BellIcon className="w-5 h-5" />
        <span className="absolute -top-1 -right-1 w-3 h-3 bg-red-500 rounded-full"></span>
      </button>
      
      {/* Profile Avatar */}
      <button className="w-8 h-8 bg-gray-300 rounded-full hover:ring-2 hover:ring-indigo-200 transition-all">
        <img src="/avatar.jpg" alt="Profile" className="w-full h-full rounded-full object-cover" />
      </button>
    </div>
  </div>
</header>

jsx<main className="ml-64 min-h-screen bg-gray-50">
  <Header />
  
  <div className="p-6 space-y-6">
    {/* Hero Welcome Section */}
    <div className="bg-gradient-to-br from-indigo-500 via-purple-600 to-indigo-700 rounded-2xl p-8 text-white relative overflow-hidden">
      <div className="relative z-10">
        <div className="flex items-center gap-4 mb-6">
          <div className="w-12 h-12 bg-white/20 rounded-xl flex items-center justify-center backdrop-blur-sm">
            <SparklesIcon className="w-6 h-6" />
          </div>
          <div>
            <h2 className="text-2xl font-bold">Welcome to LifeOS</h2>
            <p className="text-indigo-100">Your AI-powered productivity companion</p>
          </div>
        </div>
        
        <p className="text-indigo-50 mb-6 max-w-2xl leading-relaxed">
          Transform your productivity with intelligent planning, AI-powered mind maps, 
          and smart task management. Let's organize your life with artificial intelligence.
        </p>
        
        <div className="flex flex-wrap gap-4">
          <button className="px-6 py-3 bg-white text-indigo-600 rounded-lg hover:bg-gray-50 transition-all font-medium flex items-center gap-2 shadow-lg">
            <BrainIcon className="w-4 h-4" />
            Generate Mind Map
          </button>
          <button className="px-6 py-3 bg-white/20 backdrop-blur-sm text-white rounded-lg hover:bg-white/30 transition-all font-medium flex items-center gap-2">
            <CalendarIcon className="w-4 h-4" />
            Smart Schedule
          </button>
          <button className="px-6 py-3 bg-white/20 backdrop-blur-sm text-white rounded-lg hover:bg-white/30 transition-all font-medium flex items-center gap-2">
            <TargetIcon className="w-4 h-4" />
            Set Goals
          </button>
        </div>
      </div>
      
      {/* Decorative Background */}
      <div className="absolute inset-0 opacity-10">
        <svg className="w-full h-full" viewBox="0 0 400 400" fill="none">
          <defs>
            <pattern id="grid" width="40" height="40" patternUnits="userSpaceOnUse">
              <path d="M 40 0 L 0 0 0 40" fill="none" stroke="currentColor" strokeWidth="1"/>
            </pattern>
          </defs>
          <rect width="100%" height="100%" fill="url(#grid)" />
        </svg>
      </div>
    </div>

    {/* Stats Overview */}
    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
      <StatCard
        title="Tasks Completed"
        value="12"
        change="+23%"
        changeType="positive"
        icon={CheckCircleIcon}
        color="green"
      />
      <StatCard
        title="Mind Maps Created"
        value="8"
        change="+12%"
        changeType="positive"
        icon={BrainIcon}
        color="purple"
      />
      <StatCard
        title="Productivity Score"
        value="87%"
        change="+5%"
        changeType="positive"
        icon={TrendingUpIcon}
        color="blue"
      />
      <StatCard
        title="Focus Time"
        value="4.2h"
        change="+1.5h"
        changeType="positive"
        icon={ClockIcon}
        color="indigo"
      />
    </div>

    {/* Main Content Grid */}
    <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
      {/* Today's Schedule */}
      <div className="lg:col-span-2">
        <TodayScheduleCard />
      </div>
      
      {/* Quick Actions */}
      <div>
        <QuickActionsCard />
      </div>
    </div>

    {/* Secondary Grid */}
    <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
      <RecentMindMapsCard />
      <ProductivityInsightsCard />
    </div>
  </div>
</main>

<MindMapsPage>
  <PageHeader 
    title="Mind Maps" 
    subtitle="AI-powered visual thinking and brainstorming"
    action={
      <button className="px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 transition-colors font-medium">
        + New Mind Map
      </button>
    }
  />
  
  <div className="p-6">
    {/* Generator Section */}
    <div className="bg-white rounded-xl border border-gray-200 p-6 mb-6">
      <h3 className="text-lg font-semibold text-gray-900 mb-4">AI Mind Map Generator</h3>
      <div className="flex gap-4">
        <input 
          type="text" 
          placeholder="Enter your topic (e.g., 'Marketing Strategy', 'Project Planning')"
          className="flex-1 px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent"
        />
        <button className="px-6 py-3 bg-gradient-to-r from-indigo-500 to-purple-600 text-white rounded-lg hover:from-indigo-600 hover:to-purple-700 transition-all font-medium">
          Generate
        </button>
      </div>
    </div>
    
    {/* Mind Maps Grid */}
    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      {mindMaps.map(map => (
        <MindMapCard key={map.id} mindMap={map} />
      ))}
    </div>
  </div>
</MindMapsPage>

<TasksPage>
  <PageHeader 
    title="Tasks" 
    subtitle="Intelligent task management with AI prioritization"
  />
  
  <div className="p-6">
    {/* Task Input */}
    <div className="bg-white rounded-xl border border-gray-200 p-6 mb-6">
      <QuickTaskInput />
    </div>
    
    {/* Task Views */}
    <div className="grid grid-cols-1 lg:grid-cols-4 gap-6">
      {/* Filters Sidebar */}
      <div className="bg-white rounded-xl border border-gray-200 p-6">
        <TaskFilters />
      </div>
      
      {/* Task Lists */}
      <div className="lg:col-span-3 space-y-6">
        <TaskSection title="Today" tasks={todayTasks} />
        <TaskSection title="This Week" tasks={weekTasks} />
        <TaskSection title="Upcoming" tasks={upcomingTasks} />
      </div>
    </div>
  </div>
</TasksPage>

<PlannerPage>
  <PageHeader title="Smart Planner" subtitle="AI-optimized scheduling and time management" />
  
  <div className="p-6">
    {/* Calendar Interface */}
    <div className="bg-white rounded-xl border border-gray-200 p-6 mb-6">
      <CalendarComponent />
    </div>
    
    {/* AI Scheduling Assistant */}
    <div className="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-xl border border-blue-200 p-6">
      <SchedulingAssistant />
    </div>
  </div>
</PlannerPage>

const Card = ({ children, className = "", hover = true }) => (
  <div className={`
    bg-white rounded-xl border border-gray-200 
    ${hover ? 'hover:shadow-md hover:border-gray-300 transition-all duration-200' : ''}
    ${className}
  `}>
    {children}
  </div>
);

const PrimaryButton = ({ children, ...props }) => (
  <button 
    className="px-6 py-3 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 focus:ring-4 focus:ring-indigo-200 transition-all font-medium disabled:opacity-50"
    {...props}
  >
    {children}
  </button>
);

const SecondaryButton = ({ children, ...props }) => (
  <button 
    className="px-6 py-3 bg-white border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 hover:border-gray-400 transition-all font-medium"
    {...props}
  >
    {children}
  </button>
);

const TextInput = ({ label, ...props }) => (
  <div className="relative">
    <input 
      className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all"
      {...props}
    />
    {label && (
      <label className="absolute -top-2 left-3 px-1 bg-white text-xs font-medium text-gray-600">
        {label}
      </label>
    )}
  </div>
);

interface MindMapGenerator {
  generateFromTopic: (topic: string) => Promise<MindMapData>;
  enhanceExisting: (mapId: string, suggestions: string[]) => Promise<MindMapData>;
  exportFormats: ['PNG', 'PDF', 'SVG', 'JSON'];
}

interface TaskPrioritizer {
  analyzeTask: (task: Task) => Priority;
  suggestSchedule: (tasks: Task[], timeSlots: TimeSlot[]) => Schedule;
  predictCompletionTime: (task: Task) => Duration;
}

interface ProductivityAnalytics {
  getDailyStats: () => DailyStats;
  getWeeklyTrends: () => WeeklyTrends;
  generateInsights: () => ProductivityInsight[];
  predictOptimalWorkTimes: () => TimeSlot[];
}
